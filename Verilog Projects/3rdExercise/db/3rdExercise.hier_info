|3rdExercise_doublecount
LED2 <= counter_holdvalue_double:inst13.LED2
count => inst7.IN0
osc => PLL:inst2.inclk0
toggle => inst14.IN0
LED <= slow_clock:inst.LED
Seg0[0] <= Double_SevenSeg:inst9.ones[0]
Seg0[1] <= Double_SevenSeg:inst9.ones[1]
Seg0[2] <= Double_SevenSeg:inst9.ones[2]
Seg0[3] <= Double_SevenSeg:inst9.ones[3]
Seg0[4] <= Double_SevenSeg:inst9.ones[4]
Seg0[5] <= Double_SevenSeg:inst9.ones[5]
Seg0[6] <= Double_SevenSeg:inst9.ones[6]
Seg1[0] <= Double_SevenSeg:inst9.tens[0]
Seg1[1] <= Double_SevenSeg:inst9.tens[1]
Seg1[2] <= Double_SevenSeg:inst9.tens[2]
Seg1[3] <= Double_SevenSeg:inst9.tens[3]
Seg1[4] <= Double_SevenSeg:inst9.tens[4]
Seg1[5] <= Double_SevenSeg:inst9.tens[5]
Seg1[6] <= Double_SevenSeg:inst9.tens[6]
Seg2[0] <= Double_SevenSeg:inst10.ones[0]
Seg2[1] <= Double_SevenSeg:inst10.ones[1]
Seg2[2] <= Double_SevenSeg:inst10.ones[2]
Seg2[3] <= Double_SevenSeg:inst10.ones[3]
Seg2[4] <= Double_SevenSeg:inst10.ones[4]
Seg2[5] <= Double_SevenSeg:inst10.ones[5]
Seg2[6] <= Double_SevenSeg:inst10.ones[6]
Seg3[0] <= Double_SevenSeg:inst10.tens[0]
Seg3[1] <= Double_SevenSeg:inst10.tens[1]
Seg3[2] <= Double_SevenSeg:inst10.tens[2]
Seg3[3] <= Double_SevenSeg:inst10.tens[3]
Seg3[4] <= Double_SevenSeg:inst10.tens[4]
Seg3[5] <= Double_SevenSeg:inst10.tens[5]
Seg3[6] <= Double_SevenSeg:inst10.tens[6]


|3rdExercise_doublecount|counter_holdvalue_double:inst13
sw_count => intr.OUTPUTSELECT
sw_count => intr.OUTPUTSELECT
sw_count => intr.OUTPUTSELECT
sw_count => intr.OUTPUTSELECT
sw_count => intr.OUTPUTSELECT
sw_count => intr.OUTPUTSELECT
sw_count => sw_out2[2]~reg0.ENA
sw_count => sw_out2[1]~reg0.ENA
sw_count => sw_out2[0]~reg0.ENA
sw_count => sw_out2[3]~reg0.ENA
sw_count => sw_out2[4]~reg0.ENA
sw_count => sw_out2[5]~reg0.ENA
sw_count => sw_out[0]~reg0.ENA
sw_count => sw_out[1]~reg0.ENA
sw_count => sw_out[2]~reg0.ENA
sw_count => sw_out[3]~reg0.ENA
sw_count => sw_out[4]~reg0.ENA
sw_count => sw_out[5]~reg0.ENA
sw_count => LED2~reg0.ENA
sw_out2[0] <= sw_out2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sw_out2[1] <= sw_out2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sw_out2[2] <= sw_out2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sw_out2[3] <= sw_out2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sw_out2[4] <= sw_out2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sw_out2[5] <= sw_out2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock => sw_out2[0]~reg0.CLK
clock => sw_out2[1]~reg0.CLK
clock => sw_out2[2]~reg0.CLK
clock => sw_out2[3]~reg0.CLK
clock => sw_out2[4]~reg0.CLK
clock => sw_out2[5]~reg0.CLK
clock => sw_out[0]~reg0.CLK
clock => sw_out[1]~reg0.CLK
clock => sw_out[2]~reg0.CLK
clock => sw_out[3]~reg0.CLK
clock => sw_out[4]~reg0.CLK
clock => sw_out[5]~reg0.CLK
clock => LED2~reg0.CLK
clock => intr[0].CLK
clock => intr[1].CLK
clock => intr[2].CLK
clock => intr[3].CLK
clock => intr[4].CLK
clock => intr[5].CLK
sw_out[0] <= sw_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sw_out[1] <= sw_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sw_out[2] <= sw_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sw_out[3] <= sw_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sw_out[4] <= sw_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sw_out[5] <= sw_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toggle => sw_out.OUTPUTSELECT
toggle => sw_out.OUTPUTSELECT
toggle => sw_out.OUTPUTSELECT
toggle => sw_out.OUTPUTSELECT
toggle => sw_out.OUTPUTSELECT
toggle => sw_out.OUTPUTSELECT
toggle => sw_out2.OUTPUTSELECT
toggle => sw_out2.OUTPUTSELECT
toggle => sw_out2.OUTPUTSELECT
toggle => sw_out2.OUTPUTSELECT
toggle => sw_out2.OUTPUTSELECT
toggle => sw_out2.OUTPUTSELECT
LED2 <= LED2~reg0.DB_MAX_OUTPUT_PORT_TYPE


|3rdExercise_doublecount|slow_clock:inst
osc => keep[0].CLK
osc => keep[1].CLK
osc => keep[2].CLK
osc => keep[3].CLK
osc => keep[4].CLK
osc => keep[5].CLK
osc => keep[6].CLK
osc => keep[7].CLK
osc => keep[8].CLK
osc => keep[9].CLK
osc => keep[10].CLK
osc => keep[11].CLK
osc => keep[12].CLK
osc => keep[13].CLK
osc => keep[14].CLK
osc => keep[15].CLK
osc => keep[16].CLK
osc => keep[17].CLK
osc => keep[18].CLK
osc => keep[19].CLK
osc => keep[20].CLK
osc => keep[21].CLK
osc => keep[22].CLK
osc => keep[23].CLK
osc => keep[24].CLK
osc => keep[25].CLK
osc => keep[26].CLK
osc => keep[27].CLK
osc => keep[28].CLK
osc => keep[29].CLK
osc => keep[30].CLK
osc => keep[31].CLK
osc => LED~reg0.CLK
osc => clock~reg0.CLK
clock <= clock~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED <= LED~reg0.DB_MAX_OUTPUT_PORT_TYPE


|3rdExercise_doublecount|PLL:inst2
inclk0 => sub_wire3[0].IN1
c0 <= altpll:altpll_component.clk


|3rdExercise_doublecount|PLL:inst2|altpll:altpll_component
inclk[0] => pll.CLK
inclk[1] => ~NO_FANOUT~
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= sclkout1.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|3rdExercise_doublecount|Double_SevenSeg:inst9
s1[0] => Mod0.IN9
s1[0] => Div0.IN9
s1[1] => Mod0.IN8
s1[1] => Div0.IN8
s1[2] => Mod0.IN7
s1[2] => Div0.IN7
s1[3] => Mod0.IN6
s1[3] => Div0.IN6
s1[4] => Mod0.IN5
s1[4] => Div0.IN5
s1[5] => Mod0.IN4
s1[5] => Div0.IN4
tens[0] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
tens[1] <= tens.DB_MAX_OUTPUT_PORT_TYPE
tens[2] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
tens[3] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
tens[4] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
tens[5] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
tens[6] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
ones[0] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
ones[1] <= ones.DB_MAX_OUTPUT_PORT_TYPE
ones[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
ones[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
ones[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
ones[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
ones[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|3rdExercise_doublecount|Double_SevenSeg:inst10
s1[0] => Mod0.IN9
s1[0] => Div0.IN9
s1[1] => Mod0.IN8
s1[1] => Div0.IN8
s1[2] => Mod0.IN7
s1[2] => Div0.IN7
s1[3] => Mod0.IN6
s1[3] => Div0.IN6
s1[4] => Mod0.IN5
s1[4] => Div0.IN5
s1[5] => Mod0.IN4
s1[5] => Div0.IN4
tens[0] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
tens[1] <= tens.DB_MAX_OUTPUT_PORT_TYPE
tens[2] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
tens[3] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
tens[4] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
tens[5] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
tens[6] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
ones[0] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
ones[1] <= ones.DB_MAX_OUTPUT_PORT_TYPE
ones[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
ones[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
ones[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
ones[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
ones[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


